pipeline {
    agent any
  environment {
        PATH="/var/lib/jenkins/.local/bin:$PATH"  
        SEMGREP_APP_TOKEN = credentials('SEMGREP_APP_TOKEN')
        SEMGREP_PR_ID = "${env.CHANGE_ID}"
    }
    stages {
       stage('Git Checkout boilerplate') {
         steps {
            git branch: 'devsecops', credentialsId: 'Git-Credential', url: 'https://github.com/squad-hub/js-express-boilerplate'
            }
            }

        stage('Semgrep-Scan') {
          steps {
            sh 'pip3 install semgrep'
            sh 'semgrep ci'
            sh 'semgrep --config auto --output scan_results.json --json'
            sh '''
               curl -X POST "$DEFECTDOJO_URL" -H  "accept: application/json" -H  "Content-Type: multipart/form-data"  -H "Authorization: Token $DEFECTDOJO_TOKEN" -F "minimum_severity=Info" -F "active=true" -F "verified=true" -F "scan_type=Semgrep JSON Report" -F "file=@scan_results.json" -F "product_name=SquadhubProject" -F "engagement_name=SquadhubEngagement"
            '''
          }
        }

      stage('Trufflehog-Scan') {
          steps {
              withCredentials([gitUsernamePassword(credentialsId: 'Git-Credential', gitToolName: 'Default')]) {
                  sh 'pip install trufflehog'
                  sh '''
                     set +e
                     trufflehog https://github.com/squad-hub/js-express-boilerplate.git  --json > report
                     curl -X POST "$DEFECTDOJO_URL" -H  "accept: application/json" -H  "Content-Type: multipart/form-data"  -H "Authorization: Token $DEFECTDOJO_TOKEN" -F "minimum_severity=Info" -F "active=true" -F "verified=true" -F "scan_type=Trufflehog Scan" -F "file=@report" -F "product_name=NewProject" -F "engagement_name=NewEngagement"
                    '''
              }
          }
      }
    }
  }
